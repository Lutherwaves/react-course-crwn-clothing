{"ast":null,"code":"var _jsxFileName = \"/Users/mdyankov/Courses/React/CompleteReactDeveloperUdemy/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport fetchCollectionsStart from '../../redux/shop/shop.sagas';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToprops = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToprops, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/mdyankov/Courses/React/CompleteReactDeveloperUdemy/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStart","selectIsCollectionsLoaded","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","Component","componentDidMount","props","render","match","path","mapStateToprops","isCollectionLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,qBAAP,MAAkC,6BAAlC;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEN,MAAAA;AAAF,QAA4B,KAAKO,KAAvC;AACAP,IAAAA,qBAAqB;AACtB;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,SAAS,EAAER,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAEP,uBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AAtBoC;;AAwBvC,MAAMQ,eAAe,GAAGZ,wBAAwB,CAAC;AAC/Ca,EAAAA,kBAAkB,EAAEX;AAD2B,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCd,EAAAA,qBAAqB,EAAE,MAAMc,QAAQ,CAACd,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport fetchCollectionsStart from '../../redux/shop/shop.sagas';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStart } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPageContainer}\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToprops = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToprops, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}