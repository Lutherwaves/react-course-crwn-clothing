{"ast":null,"code":"var _jsxFileName = \"/Users/mdyankov/Courses/React/CompleteReactDeveloperUdemy/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst Signup = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      signUpStart\n    } = this.props;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    value: email,\n    onChange: andleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Enter a password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Create new account\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Users/mdyankov/Courses/React/CompleteReactDeveloperUdemy/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","Signup","userCredentials","setCredentials","useState","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","props","alert","handleChange","name","value","target","andleChange","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,OAAO,uBAAP;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAqB;AAClC,QAAM,CAACE,eAAD,EAAkBC,cAAlB,IAAoCC,QAAQ,CAAC;AACjDC,IAAAA,WAAW,EAAE,EADoC;AAEjDC,IAAAA,KAAK,EAAE,EAF0C;AAGjDC,IAAAA,QAAQ,EAAE,EAHuC;AAIjDC,IAAAA,eAAe,EAAE;AAJgC,GAAD,CAAlD;AAOA,QAAM;AAAEH,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAAoDN,eAA1D;;AAEA,QAAMO,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM;AAAEX,MAAAA;AAAF,QAAkB,KAAKY,KAA7B;;AACA,QAAIL,QAAQ,KAAKC,eAAjB,EAAkC;AAChCK,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACD;;AAEDb,IAAAA,WAAW,CAAC;AAAEM,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBF,MAAAA;AAAnB,KAAD,CAAX;AACD,GAVD;;AAYAS,EAAAA,YAAY,GAAGJ,KAAK,IAAI;AACtB,UAAM;AAAEK,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBN,KAAK,CAACO,MAA9B;AACAd,IAAAA,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACa,IAAD,GAAQC;AAA9B,KAAD,CAAd;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFF,EAGE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAE,KAAKP,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,KAAK,EAAEH,KAJT;AAKE,IAAA,QAAQ,EAAEY,WALZ;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,KAAK,EAAEb,WAHT;AAIE,IAAA,QAAQ,EAAE,KAAKS,YAJjB;AAKE,IAAA,KAAK,EAAC,cALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEP,QAHT;AAIE,IAAA,QAAQ,EAAE,KAAKO,YAJjB;AAKE,IAAA,KAAK,EAAC,kBALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAyBE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,KAAK,EAAEN,eAHT;AAIE,IAAA,QAAQ,EAAE,KAAKM,YAJjB;AAKE,IAAA,KAAK,EAAC,kBALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EAiCE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjCF,CAHF,CADF;AAyCD,CApED;;AAsEA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,WAAW,EAAEE,eAAe,IAAIkB,QAAQ,CAACpB,WAAW,CAACE,eAAD,CAAZ;AADF,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkClB,MAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport './sign-up.styles.scss';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst Signup = ({ signUpStart }) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const { signUpStart } = this.props;\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpStart({ email, password, displayName });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className='sign-up'>\n      <h2 className='title'>I do not have an account</h2>\n      <span> Sign up with your email and password</span>\n      <form className='sign-up-form' onSubmit={this.handleSubmit}>\n        <FormInput\n          type='email'\n          name='email'\n          label='Email'\n          value={email}\n          onChange={andleChange}\n          required\n        />\n        <FormInput\n          type='text'\n          name='displayName'\n          value={displayName}\n          onChange={this.handleChange}\n          label='Display Name'\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={password}\n          onChange={this.handleChange}\n          label='Enter a password'\n          required\n        />\n        <FormInput\n          type='password'\n          name='confirmPassword'\n          value={confirmPassword}\n          onChange={this.handleChange}\n          label='Confirm password'\n          required\n        />\n        <CustomButton type='submit'>Create new account</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(Signup);\n"]},"metadata":{},"sourceType":"module"}