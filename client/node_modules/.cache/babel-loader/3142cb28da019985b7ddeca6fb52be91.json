{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { SHOP_ITEMS } from './shop.data';\nconst config = {\n  apiKey: 'AIzaSyBRXCsrJRHam2R79hs_4vba8jvivmeSekM',\n  authDomain: 'react-udemy-course-crwn.firebaseapp.com',\n  databaseURL: 'https://react-udemy-course-crwn.firebaseio.com',\n  projectId: 'react-udemy-course-crwn',\n  storageBucket: 'react-udemy-course-crwn.appspot.com',\n  messagingSenderId: '121225628585',\n  appId: '1:121225628585:web:9b07f34afc72fae6b692b8',\n  measurementId: 'G-7PHSQE3W85'\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.warn('Error creating user: ', error);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async () => {\n  const collectionRef = firestore.collection('collections');\n  const objectsToAdd = SHOP_ITEMS.map({\n    title,\n    items\n  });\n  console.log(objectsToAdd); // const batch = firestore.batch();\n  // objectsToAdd.forEach(obj => {\n  //   const newDocRef = collectionRef.doc();\n  //   batch.set(newDocRef, obj);\n  // });\n  // return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);","map":{"version":3,"sources":["/Users/mdyankov/Courses/React/CompleteReactDeveloperUdemy/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","SHOP_ITEMS","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","warn","addCollectionAndDocuments","collectionRef","collection","objectsToAdd","map","title","items","log","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { SHOP_ITEMS } from './shop.data';\n\nconst config = {\n  apiKey: 'AIzaSyBRXCsrJRHam2R79hs_4vba8jvivmeSekM',\n  authDomain: 'react-udemy-course-crwn.firebaseapp.com',\n  databaseURL: 'https://react-udemy-course-crwn.firebaseio.com',\n  projectId: 'react-udemy-course-crwn',\n  storageBucket: 'react-udemy-course-crwn.appspot.com',\n  messagingSenderId: '121225628585',\n  appId: '1:121225628585:web:9b07f34afc72fae6b692b8',\n  measurementId: 'G-7PHSQE3W85'\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.warn('Error creating user: ', error);\n    }\n  }\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async () => {\n  const collectionRef = firestore.collection('collections');\n  const objectsToAdd = SHOP_ITEMS.map(({ title, items }));\n  console.log(objectsToAdd);\n  // const batch = firestore.batch();\n  // objectsToAdd.forEach(obj => {\n  //   const newDocRef = collectionRef.doc();\n  //   batch.set(newDocRef, obj);\n  // });\n\n  // return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n"]},"metadata":{},"sourceType":"module"}